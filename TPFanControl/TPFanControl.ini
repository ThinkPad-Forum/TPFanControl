#
# HotKey Integration: HotKey=HotKeyMethod,Key:
#
# HotKeyMethod:
# 0=disabled
# 1=Alt
# 2=Ctrl
# 3=Ctrl+Alt
# (5=Alt+Shift, used by System to change keyboard pattern)
# 4=Shift
# 6=Ctrl+Shift
# 7=ctrl+Alt+Shift
#
# allowed Keys: A-Z (Capitals), 0-1, F1-F12
#
# HotKey=HotKeyMethod,Key:
#
HK_BIOS=2,F10	#BIOSMode=						Crtl+F10
HK_Manual=1,M	#ManualMode=					Alt+M
HK_Smart=2,S	#SmartMode=						Crtl+S
HK_SM1=7,1		#SmartMode1=					ctrl+Alt+Shift+1
HK_SM2=7,2		#SmartMode2=					ctrl+Alt+Shift+2
HK_TG_BS=6,B	#Toggle:BIOS-Smart=				Crtl+Shift+B
HK_TG_BM=0,M	#Toggle:BIOS-Manual=			Crtl+Shift+M disabled
HK_TG_MS=6,F5	#Toggle:Smart-Manual=			Crtl+Shift+F5
HK_TG_12=2,F11	#Toggle:SmartMode1-SmartMode2=	Crtl+F11
#
UseTWR=0
#
#  >>>>  Celsius / Fahrenheit: temperatures in °C (active) / °F  <<<<
#
# ATTENTION: example values are for my T61:
# BluetoothEDR=1,  SensorName5=no5, IgnoreSensors=no5,
# levels 10 degrees centgrade higher than in T4x, R5x,
# change for your purposes.
#
# advice for programmers: TPFanControl must acquire mutex named
# "Access_Thinkpad_EC" to get access to embedded controller
# -----------------------------------------------------------------
# "Active=0" program just reads config.
# "Active=1" allow program to modify fan.
# "Active=2" program will come up in smart mode.
# "Active=3" program will come up in manual mode.
#
Active=2

ManFanSpeed=0	# Manual Fan Speed

SlimDialog=0	# Set to 1 for slim widget

StayOnTop=0		# Windows stays on Top if 1, normal behavior =0

BluetoothEDR=0   #set to 1 for bluetooth with enhanced data rate (i.e. T61,
				 #X61  for T4x, R5x set BluetoothEDR=0 )


# -----------------------------------------------------------------
# Windows Priority of Process (0-5, normal=2), increase if fancontrol has
# big delays in response while other processes consume performance.

ProcessPriority=2

# -----------------------------------------------------------------
# Show no icon ballons: NoBallons=1
# Show icon ballons: NoBallons=0

NoBallons=1

# -----------------------------------------------------------------
# check temperatures every x seconds (default 5)

Cycle=5

# -----------------------------------------------------------------
# For Thinkpads A2x,T2x,X2x set NoExtSensor=1 to exclude reading
# of extended sensors to prevent program errors. Attention 570(E)
# is NOT compatible. Fan speed is not available on all models.

NoExtSensor=1

# -----------------------------------------------------------------
# Minimize to systray immediately when starting

StartMinimized=0

# -----------------------------------------------------------------
# check vista icon every x seconds (default 1)

IconCycle=2

# -----------------------------------------------------------------
# Show new icon with max. temperature / sensor name

ShowTempIcon=1

# -----------------------------------------------------------------
# Save the icon by a start delay of the service of
# "SecStartDelay" (sec.) within "SecWinUptime" (sec.) after (re)boot

# SecWinUptime=120
# SecStartDelay=60
# ReIcCycle=10    #rebuild TempIcon every xxx secs.
# NoWaitMessage=0  #set to 1 to avoid sleep message

# -----------------------------------------------------------------
# Temperature thresholds for turning the taskbar icon
# yellow orange red (Smart and Manual mode only and
# only together with MinimizeToTray=1)

IconLevels=65 75 85

# -----------------------------------------------------------------
# Beep frequency and duration (in ms) for successful
# fan state changes. (Set either or both to zero to
# disable)

FanBeep=0 0

# --------------------------------------------------------
# If this max number of consecutive EC read errors occur
# program will switch fan back to bios mode and exit

MaxReadErrors= 10

# --------------------------------------------------------
# Log2File=1 enables, Log2File=0 disables
# writing to TPFanControl.log

Log2File=0


# --------------------------------------------------------
# Log2csv=1 enables, Log2csv=0 disables
# writing to TPFanControl_csv.txt renamed to
# TPFanControl_last_csv.txt after restart of TPFanControl
# rename to *.csv for use with excel

Log2csv=0

# --------------------------------------------------------
# List (separated by comma) of sensors to ignore when
# determining the max. temperature.  (Use lower case,
# e.g "IgnoreSensors=pci,aps")

#IgnoreSensors=no5

SensorName1=cpu
SensorName2=gpu
#SensorName3=pcm
#SensorName4=gpu
#SensorName5=no5
#SensorName6=x7d
#SensorName7=bat
#SensorName8=x7f
#SensorName9=bus
#SensorName10=pci
#SensorName11=pwr
#SensorName12=xc3

# ---------------------------------------------------------
# calculating Highest Temp with:
# temperature of sensor no. = real temp minus SensorOffsetno.
# Default SensorOffset1-12=0 , Capital O in SensorOffset,
# to activate delete slashes,
# Negative SensorOffsetno. values increase temperature values.

#SensorOffset1=20
#SensorOffset2=6
#SensorOffset4=2
#SensorOffset5=1
#SensorOffset6=5
#SensorOffset7=5
#SensorOffset8=4
#SensorOffset9=3
#SensorOffset10=2
#SensorOffset11=1
#SensorOffset12=5

ShowBiasedTemps=1 # set to 1 to show calculated temps for sensors

# -----------------------------------------------------------------
# Show all/active sensors at start up. all=1 only active=0

ShowAll=0

# --------------------------------------------------------
# Temperature levels with associated fan levels
# (for the fan to come back, temperature must fall
# down to previous level).  There may be more or
# less levels in this list.  The first one should
# have a fan speed of zero and is the "turn off"
# temperature.
#
# Fan speed of 64 is extreme and may be an *unsupported*
# and *damaging* mode.  A fan speed of 128 setting is
# not really a fan speed in itself but will instead switch
# fan control to BIOS mode (0x80).  The idea of this
# is to let the program get out of the way and let the
# BIOS handle extremes.(and then switch back to smart if
# the temperature is okay again)

# Celsius:      # Fahrenheit: (Level FAN 0>80 -> Fahrenheit)

# Label for Icon Menu, must be terminated by '/'
MenuLabelSM1=Smart Mode Very Cool/

Level=50 0
Level=55 4
Level=65 7
Level=75 64
Level=90 128


# optional 2nd profile very special for 'sonny'
# if you dont use, deactivate following lines with '#'

# Label for Icon Menu, must be terminated by '/'
MenuLabelSM2=Smart Mode Warmer/
Level2=22 0		// Level2=70 0
Level2=33 1		// Level2=90 1
Level2=38 2		// Level2=100 2
Level2=44 3		// Level2=110 3
Level2=55 7		// Level2=130 7
Level2=66 64		// Level2=150 64
Level2=77 128		// Level2=170 128

# IconColorFan=1 digital Icon will turn green while fan is running.
IconColorFan=1

# Lev64Norm=1 : Fan level 64 acts as normal level with hysteresis,
# fan will run till next lower temp step is reached (no pulsing fan).
# If set to zero fan level 64 acts as emergency level without hysteresis,
# fan will run till level64 temp is reached again (pulsing fan can happen).
Lev64Norm=1

# Program exits manual mode and switches to smart mode with last chosen
# profile, if this temp (degrees Centigrade or Fahrenheit) is achieved.
# default= 80 degrees Centigrade / 176 degrees Fahrenheit.
ManModeExit=87 degrees Centigrade
